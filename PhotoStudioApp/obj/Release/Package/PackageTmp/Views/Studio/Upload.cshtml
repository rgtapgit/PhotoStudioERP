@model PhotoStudioApp.Models.Studio

@{
    ViewBag.Title = "Upload";
    Layout = "~/Views/Shared/Admin.cshtml";
}

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>

<script>
@*//check the size of file uploaded*@
$(document).ready(function() {
    $("#flUpload").change(function ()
    {
        var iSize = ($("#flUpload")[0].files[0].size / 1024);
        if (iSize / 1024 > 1)
        {
            if (((iSize / 1024) / 1024) > 1)
            {
                iSize = (Math.round(((iSize / 1024) / 1024) * 100) / 100);
                $("#lblSize").html( iSize + "Gb");
            }
            else
            {
                iSize = (Math.round((iSize / 1024) * 100) / 100)
                $("#lblSize").html( iSize + "Mb");
            }
        }
        else
        {
            iSize = (Math.round(iSize * 100) / 100)
            $("#lblSize").html( iSize  + "kb");
        }
    });
});

</script>

<h2>New Studio</h2>


@using (Html.BeginForm("Upload", "Studio", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmUpload" }))
{
    @Html.AntiForgeryToken()

    <style>

    </style>

    @*<div class="container-fluid" style="padding:20px">*@
        <div class="row">
            @Html.HiddenFor(m => m.studioId, new { @class = "form-control" })
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6">
                        <label for="">Studio Name</label>
                        @Html.TextBoxFor(m => m.studioName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.studioName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label for="">Password</label>
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                Select file : <input type="file" id="flUpload" name="file2" />
                <br />
                <small>File Size is : <b><label id="lblSize" /></b></small><br />
                @Html.Raw(ViewBag.Message)
                @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Save User" class="btn btn-primary" />
            </div>
        </div>
    @*</div>*@
}

@*<h2>Upload</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Studio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.studioName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.studioName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.studioName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfilePhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
